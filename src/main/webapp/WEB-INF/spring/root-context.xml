<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<context:component-scan
		base-package="com.saeromteo.app" />
	<aop:aspectj-autoproxy />

	<!-- 프로퍼티 파일 로드 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:aws.properties</value>
				<value>classpath:MySQL_DB.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="UTF-8" />
	</bean>

	<aop:aspectj-autoproxy />

	<!-- HikariCP Configuration -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="poolName" value="${db.pool.name}" />
		<property name="driverClassName"
			value="${db.driver.class.name}" />
		<property name="jdbcUrl" value="${db.jdbc.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="connectionTestQuery"
			value="${db.connection.test.query}" />
		<property name="connectionTimeout"
			value="${db.connection.timeout}" />
		<property name="idleTimeout" value="${db.idle.timeout}" />
		<!-- CleanUp add -->
		<property name="dataSourceProperties">
			<props>
				<prop key="com.mysql.cj.disableAbandonedConnectionCleanup">true</prop>
			</props>
		</property>
	</bean>

	<!-- dataSource -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>
	
	<bean id="orderSqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/orderMapper.xml" />
		<property name="configLocation"
			value="classpath:mybatis/OrderSqlMapConfig.xml" />
	</bean>

	<bean id="orderSqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg ref="orderSqlSessionFactory" />
	</bean>
	
	<bean id="envDataSqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/envDataDao.xml" />
		<property name="configLocation"
			value="classpath:mybatis/EnvDataSqlMapConfig.xml" />
	</bean>

	<bean id="envDataSqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg ref="envDataSqlSessionFactory" />
	</bean>
	
	<bean id="newsSqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/newsMapper.xml" />
		<property name="configLocation"
			value="classpath:mybatis/NewsSqlMapConfig.xml" />
	</bean>

	<bean id="newsSqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg ref="newsSqlSessionFactory" />
	</bean>
		
	<bean id="noticeSqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/noticeMapper.xml" />
		<property name="configLocation"
			value="classpath:mybatis/NoticeSqlMapConfig.xml" />
	</bean>

	<bean id="noticeSqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg ref="noticeSqlSessionFactory" />
	</bean>
	
	<bean id="quizSqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/quizMapper.xml" />
		<property name="configLocation"
			value="classpath:mybatis/QuizSqlMapConfig.xml" />
	</bean>

	<bean id="quizSqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg ref="quizSqlSessionFactory" />
	</bean>
	
	<bean id="productSqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/productMapper.xml" />
		<property name="configLocation"
			value="classpath:mybatis/ProductSqlMapConfig.xml" />
	</bean>

	<bean id="productSqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg ref="productSqlSessionFactory" />
	</bean>
	
		<bean id="questionSqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/questionMapper.xml" />
		<property name="configLocation"
			value="classpath:mybatis/QuestionSqlMapConfig.xml" />
	</bean>

	<bean id="questionSqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg ref="questionSqlSessionFactory" />
	</bean>
	
	<bean id="wishlistSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mybatis/mappers/wishlistMapper.xml" />
		<property name="configLocation" value="classpath:mybatis/WishlistSqlMapConfig.xml" />
	</bean>

	<bean id="wishlistSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg ref="wishlistSqlSessionFactory" />
	</bean>
	
	<!-- Transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />


</beans>
