<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saeromteo.app.product">

    <resultMap id="productResultMap" type="productvo">
        <id property="productCode" column="product_code" />
        <result property="productName" column="product_name" />
        <result property="productPrice" column="product_price" />
        <result property="discountedPrice" column="discounted_price" />
        <result property="stockQuantity" column="stock_quantity" />
        <result property="registrationDate" column="registration_date" />
        <result property="envMark" column="env_mark" />
        <result property="thumbnail" column="thumbnail" />
        <result property="detailImage" column="detail_image" />
        <result property="categoryNumber" column="category_number" />
        <result property="discountCode" column="discount_code" />
        <result property="discountRate" column="discount_rate" />
        
		<association property="category" column="category_number" javaType="com.saeromteo.app.model.product.ProductCategoryEntity">
			<id property="categoryNumber" column="category_number" />
			<result property="majorCategory" column="major_category" />
			<result property="middleCategory" column="middle_category" />
			<result property="smallCategory" column="small_category" />
		</association>
		
    </resultMap>

    <!-- 모든 상품 정보 조회 -->
    <select id="readAll" resultMap="productResultMap">
        SELECT 
            p.product_code,
            p.product_name, 
            p.product_price,
            CASE
                WHEN d.discount_rate IS NOT NULL THEN p.product_price * (1 - d.discount_rate)
                ELSE p.product_price
            END AS discounted_price, 
            p.stock_quantity,
            p.registration_date,
            p.env_mark, 
            p.thumbnail, 
            p.detail_image, 
            p.category_number, 
            p.discount_code, 
            d.discount_rate 
        FROM 
            PRODUCT p
        LEFT JOIN 
            DISCOUNT d ON p.discount_code = d.discount_code;
    </select>

    <!-- 특정 productCode에 해당하는 상품 정보 조회 -->
    <select id="readByProductCode" parameterType="int" resultMap="productResultMap">
        SELECT 
            p.product_code,
            p.product_name,
            p.product_price,
            CASE
                WHEN d.discount_rate IS NOT NULL THEN p.product_price * (1 - d.discount_rate)
                ELSE p.product_price
            END AS discounted_price, 
            p.stock_quantity,
            p.registration_date,
            p.env_mark,
            p.thumbnail,
            p.detail_image,
            p.category_number,
            p.discount_code,
            d.discount_rate
        FROM 
            PRODUCT p
        LEFT JOIN 
            DISCOUNT d ON p.discount_code = d.discount_code
        WHERE 
            p.product_code = #{productCode};
    </select>

    <!-- 특정 categoryNumber에 해당하는 상품 정보 조회 -->
    <select id="readByCategory" parameterType="int" resultMap="productResultMap">
        SELECT 
            product_code,
            product_name,
            product_price,
            stock_quantity,
            registration_date,
            env_mark,
            thumbnail,
            detail_image,
            category_number,
            discount_code,
            discount_rate
        FROM 
            PRODUCT
        LEFT JOIN 
            DISCOUNT ON PRODUCT.discount_code = DISCOUNT.discount_code
        WHERE 
            category_number = #{categoryNumber};
    </select>
    
    <!-- 특정 parentCategoryNumber에 해당하는 상품 정보 조회 -->
    <select id="readByParentCategory" parameterType="int" resultMap="productResultMap">
        SELECT 
            product_code,
            product_name,
            product_price,
            stock_quantity,
            registration_date,
            env_mark,
            thumbnail,
            detail_image,
            category_number,
            discount_code,
            discount_rate
        FROM 
            PRODUCT
        LEFT JOIN 
            DISCOUNT ON PRODUCT.discount_code = DISCOUNT.discount_code
        INNER JOIN 
            PRODUCT_CATEGORY_PATH ON PRODUCT.category_number = PRODUCT_CATEGORY_PATH.child_category_id
        WHERE 
            PRODUCT_CATEGORY_PATH.parent_category_id = #{parentCategoryNumber};
    </select>

    <!-- 새로운 상품 정보 삽입 -->
    <insert id="insertProduct" parameterType="productvo">
        INSERT INTO PRODUCT (
            product_code,
            product_name,
            product_price,
            stock_quantity,
            registration_date,
            env_mark,
            thumbnail,
            detail_image,
            category_number,
            discount_code
        )
        VALUES (
            #{productCode},
            #{productName},
            #{productPrice},
            #{stockQuantity},
            #{registrationDate},
            #{envMark},
            #{thumbnail},
            #{detailImage},
            #{categoryNumber},
            #{discountCode}
        );
    </insert>

    <!-- 기존 상품 정보 수정 -->
    <update id="updateProduct" parameterType="productvo">
        UPDATE PRODUCT
        SET 
            product_name = #{productName},
            product_price = #{productPrice},
            stock_quantity = #{stockQuantity},
            registration_date = #{registrationDate},
            env_mark = #{envMark},
            thumbnail = #{thumbnail},
            detail_image = #{detailImage},
            category_number = #{categoryNumber},
            discount_code = #{discountCode}
        WHERE 
            product_code = #{productCode};
    </update>

    <!-- 특정 productCode에 해당하는 상품 정보 삭제 -->
    <delete id="deleteProduct" parameterType="int">
        DELETE FROM PRODUCT WHERE product_code = #{productCode};
    </delete>
    
    <!-- 페이징 처리 (특정 페이지에 해당하는 상품 목록을 가져옴) -->
    <select id="readAllPaged" parameterType="map" resultMap="productResultMap">
        SELECT 
            product_code,
            product_name,
            product_price,
            CASE
                WHEN discount_rate IS NOT NULL THEN product_price * (1 - discount_rate)
                ELSE product_price
            END AS discounted_price,
            stock_quantity,
            registration_date,
            env_mark,
            thumbnail,
            detail_image,
            category_number,
            discount_code,
            discount_rate
        FROM PRODUCT
        LIMIT #{offset}, #{size};
    </select>
    
    <!-- 정렬 기준에 따른 상품 정보 조회 -->
    <select id="readAllSorted" resultMap="productResultMap" parameterType="map">
        SELECT 
            p.product_code, 
            p.product_name,
            p.product_price,
            CASE
                WHEN d.discount_rate IS NOT NULL THEN p.product_price * (1 - d.discount_rate) 
                ELSE p.product_price
            END AS discounted_price,
            p.stock_quantity, 
            p.registration_date, 
            p.env_mark,
            p.thumbnail,
            p.detail_image, 
            p.category_number, 
            p.discount_code, 
            d.discount_rate
        FROM 
            PRODUCT p
        LEFT JOIN 
            DISCOUNT d ON p.discount_code = d.discount_code 
        ORDER BY 
            <choose>
                <when test="sortBy == 'new'">p.registration_date DESC</when> 
                <when test="sortBy == 'lowPrice'">p.product_price ASC</when> 
                <when test="sortBy == 'highPrice'">p.product_price DESC</when> 
                <when test="sortBy == 'discountRate'">d.discount_rate DESC</when> 
                <otherwise>p.product_name ASC</otherwise> 
            </choose>
    </select>
    
    
   <!-- 카테고리별 상품 조회 -->
    <!-- 소분류 조회 -->
    <!-- <select id="selectBySmallCategory" resultMap="productResultMap">
        SELECT P.product_code, P.product_name, P.product_price, P.stock_quantity, P.registration_date, P.env_mark, P.thumbnail, P.detail_image, 
               PC.major_category, PC.middle_category, PC.small_category
        FROM PRODUCT P
        JOIN PRODUCT_CATEGORY PC ON P.category_number = PC.category_number
        WHERE PC.major_category = #{majorCategory}
          AND PC.middle_category = #{middleCategory}
          AND PC.small_category = #{smallCategory};
    </select> -->
    
    <select id="selectBySmallCategory" resultMap="productResultMap">
        SELECT P.product_code, P.product_name, P.product_price,
		CASE
		WHEN d.discount_rate IS NOT NULL THEN P.product_price * (1 -
		d.discount_rate)
		ELSE P.product_price
		END AS discounted_price,
		P.stock_quantity, P.registration_date, P.env_mark, P.thumbnail, P.detail_image,
		PC.major_category, PC.middle_category, PC.small_category,
		P.discount_code, d.discount_rate
		FROM PRODUCT P
		LEFT JOIN DISCOUNT d ON P.discount_code = d.discount_code
		JOIN PRODUCT_CATEGORY PC ON P.category_number = PC.category_number
        WHERE PC.major_category = #{majorCategory}
          AND PC.middle_category = #{middleCategory}
          AND PC.small_category = #{smallCategory};
    </select>

    <!-- 중분류 조회 -->
<!--     <select id="selectByMiddleCategory" resultMap="productResultMap">
        SELECT P.product_code, P.product_name, P.product_price, P.stock_quantity, P.registration_date, P.env_mark, P.thumbnail, P.detail_image, 
               PC.major_category, PC.middle_category, PC.small_category
        FROM PRODUCT P
        JOIN PRODUCT_CATEGORY PC ON P.category_number = PC.category_number
        LEFT JOIN DISCOUNT d ON P.discount_code = d.discount_code
        WHERE PC.major_category = #{majorCategory}
          AND PC.middle_category = #{middleCategory};
    </select> -->
    
    <select id="selectByMiddleCategory" resultMap="productResultMap">
        SELECT P.product_code, P.product_name, P.product_price,
		CASE
		WHEN d.discount_rate IS NOT NULL THEN P.product_price * (1 -
		d.discount_rate)
		ELSE P.product_price
		END AS discounted_price,
		P.stock_quantity, P.registration_date, P.env_mark, P.thumbnail, P.detail_image,
		PC.major_category, PC.middle_category, PC.small_category,
		P.discount_code, d.discount_rate
		FROM PRODUCT P
		LEFT JOIN DISCOUNT d ON P.discount_code = d.discount_code
		JOIN PRODUCT_CATEGORY PC ON P.category_number = PC.category_number
        WHERE PC.major_category = #{majorCategory}
          AND PC.middle_category = #{middleCategory};
    </select>
    


    <!-- 대분류 조회 -->
    <select id="selectByMajorCategory" resultMap="productResultMap">
		SELECT P.product_code, P.product_name, P.product_price,
		CASE
		WHEN d.discount_rate IS NOT NULL THEN P.product_price * (1 -
		d.discount_rate)
		ELSE P.product_price
		END AS discounted_price,
		P.stock_quantity, P.registration_date, P.env_mark, P.thumbnail, P.detail_image,
		PC.major_category, PC.middle_category, PC.small_category,
		P.discount_code, d.discount_rate
		FROM PRODUCT P
		LEFT JOIN DISCOUNT d ON P.discount_code = d.discount_code
		JOIN PRODUCT_CATEGORY PC ON P.category_number = PC.category_number
		WHERE PC.major_category = #{majorCategory};
    </select>

</mapper>
